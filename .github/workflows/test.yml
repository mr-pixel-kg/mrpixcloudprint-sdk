name: Test

on:
  push:
    branches: [ master, development ]
  pull_request:
    branches: [ master, development ]

env:
  PHP_VERSION: 8.2

jobs:
  codestyle:
    name: "Code Style Analysis"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: Setup PHP ${{ env.PHP_VERSION }} and Composer 2
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          tools: composer:v2

      - name: "Cache Composer packages"
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: "Install dependencies"
        id: install
        run: composer install --prefer-dist --no-progress --optimize-autoloader

      - name: "PHP CS-Fixer"
        run: |
          ./vendor/bin/php-cs-fixer fix --diff --dry-run

  static-code-analysis:
    name: "Static Code Analysis"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4


      - name: Setup PHP ${{ env.PHP_VERSION }} and Composer 2
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          tools: composer:v2

      - name: "Cache Composer packages"
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
            
      - name: "Install dependencies"
        id: install
        run: composer install --prefer-dist --no-progress --optimize-autoloader

      - name: "PHPStan"
        run: |
          composer run-script phpstan

  lint:
    name: "Linting"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4


      - name: Setup PHP ${{ env.PHP_VERSION }} and Composer 2
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          tools: composer:v2

      - name: "Validate composer.json and composer.lock"
        run: composer validate --strict

      - name: "Cache Composer packages"
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
            
      - name: "Install dependencies"
        id: install
        run: composer install --prefer-dist --no-progress

  unit-tests:
    name: "Unit Tests"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.2', '8.3']

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Setup PHP and Composer 2"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit, composer:v2

      - name: "Cache Composer packages"
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
            
      - name: "Install dependencies"
        id: install
        run: |
          composer install --no-dev --no-progress --optimize-autoloader
          composer require php-http/guzzle7-adapter --no-progress --optimize-autoloader

      - name: "Run PhpUnit tests"
        env:
          MRPIX_CLOUDPRINT_SERVER: ${{ secrets.MRPIX_CLOUDPRINT_SERVER }}
          MRPIX_CLOUDPRINT_USERNAME: ${{ secrets.MRPIX_CLOUDPRINT_USERNAME }}
          MRPIX_CLOUDPRINT_PASSWORD: ${{ secrets.MRPIX_CLOUDPRINT_PASSWORD }}
        run: composer test
